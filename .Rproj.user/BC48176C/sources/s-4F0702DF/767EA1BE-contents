---
title: "Linear modelling of soil temperature effects on root lesion nematode population densities in R"
author: "Adam Sparks"
date: "7/31/2019"
output: 
  html_document: 
    theme: default
    toc: yes
bibliography: bibliography.bib
csl: phytopathology.csl
---

 
<h3>Adam H Sparks and John P Thompson</h3>
<p>University of Southern Queensland, Centre for Crop Health, Toowoomba, Qld, AU</p>
 

# Introduction

_Pratylenchus thornei_, the root-lesion nematode, is widely distributed in wheat (_Triticum aestivum_) growing areas of many countries and is of particular concern in sub-tropical environments [@THOMPSON2015]. These nematodes penetrate roots to feed and reproduce in the root cortex leading to loss of root function, which affects nutrient and water uptake of nutrients and water causing nutrient deficiency and water stress [@THOMPSON2015].

In the original paper the population response of _P. thornei_ in Queensland, Australia wheat to temperature is modelled using a linear and quadratic equations. The study aimed to investigate the effects of soil profile temperatures after different sowing dates on reproduction of the nematodes in susceptible and moderately resistant wheat cultivars in the subtropical grain region of eastern Australia. This document recreates the models for population densities of _P. thornei_ as described in the original paper.

## Objectives

There are two types of models described in the paper, the first model is a linear model used to describe the unplanted control and two quadratic models fit Gatcher (Susceptible) and GS50a (Moderately Resistant) wheat cultivars. For a more detailed discussion on fitting plant disease models in R, please see the "[Linear Regression](http://www.apsnet.org/edcenter/advanced/topics/EcologyAndEpidemiologyInR/DiseaseProgress/Pages/LinearRegression.aspx)" module in the "Ecology and Epidemiology in R" documents available in the American Phytopathological Society's (APS) Education Center. For an even more in-depth discussion on linear models in R, how to fit and how to interpret the diagnostics that R provides the reader should refer to Faraway [-@FARAWAY2002].

This post will illustrate how to fit the original linear and quadratic models using the original data in R [@R2017].

# Packages

Using the **`tidyverse`**, [-@TIDYVERSE2017] package simplifies the libraries used in this work. It is a collection of packages designed to work together for data science, <https://www.tidyverse.org/>. The **`tidyverse`** includes, **`readr`** [-@READR2017], used to import the data; **`tidyr`** [-@TIDYR2018], used to format the data; **`dplyr`** [-@DPLYR2017], used to subset the data; and **`ggplot2`** [-@GGPLOT22009], used for visualising the data and model fits. **`viridis`** [-@VIRIDIS2018] is a selection of colour pallets that are widely accessible for people with colour-blindness and printing
in black and white.

The following code chunk checks first to see if you have **`tidyverse`**, **`viridis`** and **`hrbrthemes`** installed, if not, it will automatically install them and then load them. Then set the default theme for all graphs to `theme_ipsum_rc`.

```{r libraries, message=FALSE}
if (!require(tidyverse)) {
  install.packages(
    "tidyverse",
    repos = c(CRAN = "https://cloud.r-project.org/")
  )
  library(tidyverse)
}

if (!require(viridis)) {
  install.packages(
    "viridis",
    repos = c(CRAN = "https://cloud.r-project.org/")
  )
  library(viridis)
}

if (!require(hrbrthemes)) {
  install.packages(
    "hrbrthemes",
    repos = c(CRAN = "https://cloud.r-project.org/")
  )
  library(hrbrthemes)
}

ggplot2::theme_set(hrbrthemes::theme_ipsum_rc())
```

# Data Wrangling

The data are located in the `data` sub-folder. Import the data using
`read_csv()` function from **`readr`**  and view them.

```{r data_import, echo=TRUE, message=FALSE}
nema <- read_csv("data/Nematode_Data.csv")

nema

nrow(nema)
```

### Description of Fields in the Data

There are nine columns in the `nema` data described here in the following table.

```{r table, echo=FALSE, message=FALSE, warnings=FALSE, results='asis'}
if (!require(kableExtra)) {
  install.packages(
    "kableExtra",
    repos = c(CRAN = "https://cloud.r-project.org/")
  )
  library(kableExtra)
}

fields <- data.frame(
  c(
    "Weeks",
    "Days",
    "Temperature",
    "Degree_Days",
    "Unplanted",
    "Gatcher",
    "GS50a",
    "Potam",
    "Suneca"
  ),
  c(
    "Number of weeks after wheat sowing",
    "Number of days after wheat sowing",
    "Temperature(˚C) treatment",
    "Average thermal time degree days above 10 ˚C for four soil depths
    (8, 15, 30 and 60 cm)",
    paste0("Log", footnote_marker_symbol(1), ", `log()`, nematode population in the control treatment with no wheat planted"),
    paste0("Log", footnote_marker_symbol(1), ", `log()`, nematode population in a susceptible wheat cultivar"),
    paste0("Log", footnote_marker_symbol(1), ", `log()`, nematode population in a moderately resistant wheat cultivar"),
    paste0("Log", footnote_marker_symbol(1), ", `log()`, nematode population in a susceptible wheat cultivar"),
    paste0("Log", footnote_marker_symbol(1), ", `log()`, nematode population in a susceptible wheat cultivar")
  )
)

names(fields) <- c("Field", "Data Description")

fields %>%
  knitr::kable("html", escape = F) %>%
  kable_styling(bootstrap_options = c(
    "striped",
    "hover",
    "condensed",
    "responsive"
  )) %>%
  footnote(
    symbol = "For an exploration into the reasons why the data were transformed using the natural log `log()`, see the [Exploring Why the Data Were Log Transformed] in the [Bonus Material] section"
  )
```

### Wide to Long Data

You can see that each of the varieties have their own column in the original data format, this is commonly called wide data. Wide data are commonly found in spreadsheets but do not lend themselves easily to data analysis, modelling and visualisation. To make it easier to do these things it is common to convert the data from wide to long format, commonly referred to as tidying, when using R. The advantage of a tidy dataset is that it is easy to manipulate, model and visualize, and always has a specific structure where each variable is a column, each observation is a row, and each type of observational unit is a table
[@TIDY-DATA2014].

In order to use **`ggplot2`** for visualising the data, they need to be converted from wide to long. Using `gather()` from the **`tidyr`** package to convert from wide to long format where the varieties are all listed in a single column, `Variety`.

```{r gather_data, echo=TRUE}
nema_long <- nema %>% gather(Variety, Log_pop, Unplanted:Suneca)

nema_long

nrow(nema_long)
```

As we see, the original `nema` data had only `r {nrow(nema)}` rows and the long
format of the data have `r {nrow(nema_long)}` rows now.

# Data Visualisation

Now that the data are in the format that **`ggplot2`** uses, take a look at
the data first to see what it looks like. Here we fit a smoothed line for each
variety's nematode population to the raw data. The individual temperature
treatments are shown here by shape, the variety by colour.

```{r raw_data_scatterplots, echo=TRUE, message=FALSE}
ggplot(
  nema_long,
  aes(
    x = Degree_days,
    y = Log_pop,
    colour = Temperature,
    group = Variety
  )
) +
  geom_point() +
  geom_smooth(
    colour = "grey",
    se = FALSE,
    alpha = 0.5
  ) +
  ylab(expression(
    paste(
      "ln(",
      italic("P. thornei"),
      "/kg soil) + 1"
    ),
    sep = ""
  )) +
  xlab("Thermal Time (˚C Days Above 10˚C)") +
  scale_colour_viridis("Temperature") +
  facet_wrap(~ Variety, ncol = 2)
```

# Modelling

## Unplanted Model

The paper uses a linear model for the unplanted control. Here we will write a
function to use in modelling the unplanted population data. I have wrapped the
model in a function which makes it pipe-able, `%>%` and has other advantages
when it comes to fitting the same model to several sets of data.

In the linear equation for the Unplanted control treatment, the rate of
population increase can be expressed as:

$$y = y_0 + rt$$

Where $y_0$ is the initial population, $r$ is the rate of change and $t$
equal time.

### Fitting a Linear Model

```{r linear_model, echo=TRUE}
linear_model <- function(df) {
  lm(
    Log_pop ~ Degree_days,
    data = df
  )
}
```

Now check the model fit, using `filter()` from **`dplyr`** to select only
Unplanted data from the data set for the model and fit the linear model to the
data.

```{r check_model}
unplanted_model <- nema_long %>%
  filter(Variety == "Unplanted") %>%
  linear_model()
```

Using `par(mfrow = c(2, 2))` creates a four-panel graph rather than four individual graphs, which the next function will create by default.

Using the `plot()` function with any `lm()` object will create four diagnostic plots for your inspection.

```{r plot_model}
par(mfrow = c(2, 2))
plot(unplanted_model)
```

These plots do not appear to indicate anything amiss as one would hope for from the models that have already been published. If you are unfamiliar with how to interpret these diagnostic plots see [Interpreting Linear Models in R] in the [Further Reading] section.

Using the `summary()` function displays information about the model fit. If you are unfamiliar with how to read and interpret the output of `summary()` for a linear model, please refer to [Interpreting Linear Models in R] in the
[Further Reading] section for references that go into more detail on this matter.

```{r summary}
summary(unplanted_model)
```

From the original paper, the $R^2$ value of the unplanted linear model was 0.7, we can see here that agrees:
`r {round(summary(unplanted_model)$r.squared, 2)}`. In the original paper, $P$ < 0.001, R reports $p-value:$ 
`r {summary(unplanted_model)$coefficients[2, 4]}`, which also agrees.

#### Visualising the Model Fit to the Data

Using **`ggplot2`**'s `geom_smooth()` we can fit the same model above and graph the resulting line.

```{r visualise_linear}
nema_long %>%
  group_by(Variety) %>%
  filter(Variety == "Unplanted") %>%
  ggplot(aes(
    x = Degree_days,
    y = Log_pop,
    colour = Temperature
  )) +
  geom_point() +
  geom_smooth(
    method = "lm",
    formula = y ~ x,
    size = 1,
    se = FALSE,
    colour = "grey",
    alpha = 0.5
  ) +
  ylab(expression(
    paste(
      "ln(",
      italic("P. thornei"),
      "/kg soil) + 1"
    ),
    sep = ""
  )) +
  xlab("Thermal Time ˚C Days Above 10 ˚C)") +
  scale_colour_viridis("Temperature") +
  ggtitle("Unplanted Linear Model")
ggsave("figs/fig1-linear-fit.png", dpi = 300)
```

## Quadratic Models

In the original paper, the quadratic model best described Gatcher and GS50a
data, which are fit here.

```{r quadratic_models, echo=TRUE}
quadratic_model <- function(df) {
  lm(
    Log_pop ~ Degree_days + I(Degree_days ^ 2),
    data = df
  )
}
```

### Susceptible Varieties

Gatcher, Potam and Suneca all have very similar curves, here Gatcher is used to fit a quadratic model as in the original paper following the same methods as above for the linear model.

```{r susceptible_model, echo=TRUE}
s_model <- nema_long %>%
  filter(Variety == "Gatcher") %>%
  quadratic_model()

par(mfrow = c(2, 2))
plot(s_model)

summary(s_model)
```

From the original paper, the $R^2$ value of Gatcher's quadratic model was 0.80,
we can see here that agrees: `r {round(summary(s_model)$r.squared, 2)}`. In the
original paper, $P$ < 0.001, R reports $p-value:$
`r {summary(s_model)$coefficients[2, 4]}`, which also agrees.

#### Visualise Susceptible Variety Model

The model visualisation is the same for the quadratic models as the linear
model, however you will note that the line has a downward curve at higher
temperatures.

```{r visualise_s_model}
nema_long %>%
  group_by(Variety) %>%
  filter(Variety == "Gatcher") %>%
  ggplot(aes(
    x = Degree_days,
    y = Log_pop,
    colour = Temperature,
  )) +
  geom_point() +
  geom_smooth(
    method = "lm",
    formula = y ~ x + I(x ^ 2),
    size = 1,
    se = FALSE,
    colour = "grey",
    alpha = 0.5
  ) +
  ylab(expression(
    paste(
      "ln(",
      italic("P. thornei"),
      "/kg soil) + 1"
    ),
    sep = ""
  )) +
  xlab("Thermal Time (˚C Days Above 10˚C)") +
  scale_colour_viridis("Temperature") +
  ggtitle("Gatcher Quadratic Model")
```

### Moderately Resistant Cultivar

GS50a, moderately resistant to _P. thornei_, also fits a quadratic model but the
coefficients are slightly different due to different responses to the variety
and temperature.

```{r moderately_resistant_model, echo=TRUE}
mr_model <- nema_long %>%
  filter(Variety == "GS50a") %>%
  quadratic_model()

par(mfrow = c(2, 2))
plot(mr_model)

summary(mr_model)
```

From the original paper, the $R^2$ value of GS50a's quadratic model was 0.82,
we can see here that agrees: `r {round(summary(mr_model)$r.squared, 2)}`. In the
original paper, $P$ < 0.001, R reports $p-value:$
`r {summary(mr_model)$coefficients[2, 4]}`, which also agrees.

#### Visualising the Model Fit to the Data

```{r visualise_mr_model}
nema_long %>%
  group_by(Variety) %>%
  filter(Variety == "GS50a") %>%
  ggplot(aes(
    x = Degree_days,
    y = Log_pop,
    colour = Temperature,
  )) +
  geom_point() +
  geom_smooth(
    method = "lm",
    formula = y ~ x + I(x ^ 2),
    size = 1,
    se = FALSE,
    colour = "grey",
    alpha = 0.5
  ) +
  ylab(expression(
    paste(
      "ln(",
      italic("P. thornei"),
      "/kg soil) + 1"
    ),
    sep = ""
  )) +
  xlab("Thermal Time (˚C Days Above 10˚C)") +
  scale_colour_viridis("Temperature") +
  ggtitle("GS50a Quadratic Model")
```

# Discussion and Conclusions

As in the original paper, the model equations can be derived from these models as well. The derived regression equations are:

Gatcher (Susceptible):
$$ln(P. thornei + 1) = -0.000003(0.0000009)T^2 + 0.009(0.0019)T + 5.4671(0.904)$$

GS50a (Moderately Resistant):
$$ln(P. thornei + 1) = -0.000002(0.0000007)T^2 + 0.0063(0.0014)T + 5.1559(0.678)$$

Unplanted Control: 
$$ln(P. thornei + 1) = 0.0013(0.00018)T + 5.4151(0.193)$$

Refer back to the `summary()` outputs for each of the models for the coefficient values and $R^2$ values, which match those reported in the original paper where the models were fit with Genstat.

Gatcher and GS50a have similar phenologies, but differ in resistance to root lesion nematodes, making the model comparisons a reasonable objective. The original paper goes on to test the effect of sowing date based on degree days. [@THOMPSON2015] reported a 61% increase in yield on average from sowing the susceptible, intolerant cultivar Gatcher at the end of May than sowing it in the third week of June. By June the soil temperatures and nematode populations were both greater, leading to lower wheat yield. The effects were less pronounced in the moderately resistant cultivar, GS50a, but were similar with a reduction in nematode population densities occurring due to earlier
planting.

The models illustrated here for Gatcher and GS50a were able to accurately reflect the changes in nematode population as a result of degree days, which affected the nematodes' ability to damage the crop and reduce yield
[@THOMPSON2015].

# Reproducibility

```{r reproducibility, echo=FALSE}
devtools::session_info()
```

# References
